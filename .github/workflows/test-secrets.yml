name: Test Secrets Output

on:
  workflow_dispatch:
    inputs:
      deployEnvironment:
        type: choice
        description: the target environment to deploy
        required: true
        options:
          - PRO
          - QA


jobs:
  test-secret-output:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [FOO_ENV_12, FOO_ENV_13, FOO_ENV_14, FOO_ENV_15, FOO_ENV_16, FOO_ENV_17, FOO_ENV_18, FOO_ENV_19, FOO_ENV_20]
    environment: ${{ matrix.environment }}
    steps:
      - name: Output Secrets
        run: |
          for i in {1..10}
          do
            secret_name="FOO_SECRET_$i"
            secret_value="${!secret_name}"
            echo "$secret_name: ${secret_value:0:1} ${secret_value:1}"
          done
        env:
          FOO_SECRET_1: ${{ secrets.FOO_SECRET_1 }}
          FOO_SECRET_2: ${{ secrets.FOO_SECRET_2 }}
          FOO_SECRET_3: ${{ secrets.FOO_SECRET_3 }}
          FOO_SECRET_4: ${{ secrets.FOO_SECRET_4 }}
          FOO_SECRET_5: ${{ secrets.FOO_SECRET_5 }}
          FOO_SECRET_6: ${{ secrets.FOO_SECRET_6 }}
          FOO_SECRET_7: ${{ secrets.FOO_SECRET_7 }}
          FOO_SECRET_8: ${{ secrets.FOO_SECRET_8 }}
          FOO_SECRET_9: ${{ secrets.FOO_SECRET_9 }}
          FOO_SECRET_10: ${{ secrets.FOO_SECRET_10 }}

  extract-tenant-configs:
    name: Extracts tenants from deployment-configs
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.matrix.outputs.value }}

    steps:
        - uses: actions/checkout@v4
        - id: matrix
        # "path":"deployment-configs/QA/customer1/ci.tenant.env", "customer":"customer1"}, {"path":"deployment-configs/QA/customer2/ci.tenant.env", "customer":"customer2"}
          name: create tenant config matrix
          run: |
            matrix_output=$(find deployment-configs/${{inputs.deployEnvironment}} -type f -name 'ci.tenant.env' -not -path '*/shared/*' | while read -r file; do
              customer_name=$(basename $(dirname "$file"))
              echo "{\"path\":\"$file\", \"customer\":\"$customer_name\"},"
            done | sed '$ s/,$//')
            echo "value=[$matrix_output]" >> $GITHUB_OUTPUT

  print-env-customer-secrets:
    needs: [extract-tenant-configs]
    runs-on: ubuntu-latest
    name: print customer secrets
    strategy:
      # matrix: ${{needs.extract-tenant-configs.outputs.matrix}}
      matrix:
        include: ${{ fromJson(needs.extract-tenant-configs.outputs.matrix) }}
    steps:
        - name: Output Secrets
          run: |
            secret_name="${{ inputs.deployEnvironment }}_${{ matrix.customer }}"
            secret_name_uppercase=$(echo "$secret_name" | tr '[:lower:]' '[:upper:]')
            secret_value="${!secret_name_uppercase}"
            echo "$secret_name: ${secret_value:0:1} ${secret_value:1}"